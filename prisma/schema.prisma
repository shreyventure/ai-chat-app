// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String            @id @default(cuid())
  name     String?
  email    String?           @unique
  image    String?
  messages Message[]
  sessions ChatParticipant[] // ðŸ‘ˆ now connected through join table
}

model ChatSession {
  id           String            @id @default(cuid())
  title        String?
  createdAt    DateTime          @default(now())
  participants ChatParticipant[] // ðŸ‘ˆ connected through join table
  messages     Message[]
}

model ChatParticipant {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  chatSession   ChatSession @relation(fields: [chatSessionId], references: [id])
  chatSessionId String

  @@unique([userId, chatSessionId]) // ðŸ‘ˆ prevent duplicate entries
}

model Message {
  id            String      @id @default(cuid())
  text          String
  sender        String // "user" or "ai"
  createdAt     DateTime    @default(now())
  userId        String
  user          User        @relation(fields: [userId], references: [id])
  chatSessionId String
  chatSession   ChatSession @relation(fields: [chatSessionId], references: [id], onDelete: Cascade)
}
